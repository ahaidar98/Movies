{"ast":null,"code":"var _jsxFileName = \"/Users/ahaidar/Desktop/lattice/react-boilerplate/client/src/container/App/index.js\";\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { routerReducer, routerMiddleware } from 'react-router-redux';\nimport { createBrowserHistory as createHistory } from 'history';\nimport createSagaMiddleware from 'redux-saga';\nimport reduxReset from 'redux-reset';\nimport routes from '../../routes';\nimport createReducers from '../../reducers';\nimport rootSaga from '../../sagas';\nimport './styles.css';\nconst composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n\nconst App = () => {\n  // store is created with the reducers that are in /reducers\n  const reducers = createReducers(routerReducer);\n  const sagaMiddleware = createSagaMiddleware();\n  const history = createHistory();\n  history.listen((loc, act) => {\n    const container = window.document.getElementById('mainContainer');\n    if (container) container.scrollTop = 0;\n  });\n  const middlewares = [sagaMiddleware, routerMiddleware(history)];\n  const store = createStore(reducers, composeEnhancers(applyMiddleware(...middlewares), reduxReset()));\n  sagaMiddleware.run(rootSaga); // browser history sync with redux store\n\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"mainContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, routes(history)));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/ahaidar/Desktop/lattice/react-boilerplate/client/src/container/App/index.js"],"names":["React","Provider","createStore","applyMiddleware","compose","routerReducer","routerMiddleware","createBrowserHistory","createHistory","createSagaMiddleware","reduxReset","routes","createReducers","rootSaga","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","App","reducers","sagaMiddleware","history","listen","loc","act","container","document","getElementById","scrollTop","middlewares","store","run"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,oBAAhD;AACA,SAASC,oBAAoB,IAAIC,aAAjC,QAAsD,SAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,cAAP,MAA2B,gBAA3B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAO,cAAP;AAEA,MAAMC,gBAAgB,GAAG,OAAOC,MAAP,KAAkB,QAAlB,IACzBA,MAAM,CAACC,oCADkB,GAEvBD,MAAM,CAACC,oCAAP,CAA4C,EAA5C,CAFuB,GAE2BZ,OAFpD;;AAIA,MAAMa,GAAG,GAAG,MAAM;AAChB;AAEA,QAAMC,QAAQ,GAAGN,cAAc,CAACP,aAAD,CAA/B;AACA,QAAMc,cAAc,GAAGV,oBAAoB,EAA3C;AACA,QAAMW,OAAO,GAAGZ,aAAa,EAA7B;AAEAY,EAAAA,OAAO,CAACC,MAAR,CAAe,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC3B,UAAMC,SAAS,GAAGT,MAAM,CAACU,QAAP,CAAgBC,cAAhB,CAA+B,eAA/B,CAAlB;AAEA,QAAIF,SAAJ,EAAeA,SAAS,CAACG,SAAV,GAAsB,CAAtB;AAChB,GAJD;AAMA,QAAMC,WAAW,GAAG,CAACT,cAAD,EAAiBb,gBAAgB,CAACc,OAAD,CAAjC,CAApB;AACA,QAAMS,KAAK,GAAG3B,WAAW,CAACgB,QAAD,EAAWJ,gBAAgB,CAACX,eAAe,CAAC,GAAGyB,WAAJ,CAAhB,EAAkClB,UAAU,EAA5C,CAA3B,CAAzB;AAEAS,EAAAA,cAAc,CAACW,GAAf,CAAmBjB,QAAnB,EAhBgB,CAkBhB;;AAEA,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEgB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,MAAM,CAACS,OAAD,CADT,CADF,CADF;AAOD,CA3BD;;AA6BA,eAAeH,GAAf","sourcesContent":["import 'regenerator-runtime/runtime';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { routerReducer, routerMiddleware } from 'react-router-redux';\nimport { createBrowserHistory as createHistory } from 'history'\nimport createSagaMiddleware from 'redux-saga';\nimport reduxReset from 'redux-reset';\n\nimport routes from '../../routes';\nimport createReducers from '../../reducers';\nimport rootSaga from '../../sagas';\nimport './styles.css';\n\nconst composeEnhancers = typeof window === 'object' &&\nwindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n\nconst App = () => {\n  // store is created with the reducers that are in /reducers\n\n  const reducers = createReducers(routerReducer);\n  const sagaMiddleware = createSagaMiddleware();\n  const history = createHistory();\n\n  history.listen((loc, act) => {\n    const container = window.document.getElementById('mainContainer');\n\n    if (container) container.scrollTop = 0;\n  });\n\n  const middlewares = [sagaMiddleware, routerMiddleware(history)];\n  const store = createStore(reducers, composeEnhancers(applyMiddleware(...middlewares), reduxReset()));\n\n  sagaMiddleware.run(rootSaga);\n\n  // browser history sync with redux store\n\n  return (\n    <Provider store={store}>\n      <div id=\"mainContainer\">\n        {routes(history)}\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}