{"ast":null,"code":"var _jsxFileName = \"/Users/ahaidar/Desktop/lattice/react-boilerplate/client/src/container/MovieProfile/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types'; // import { Link } from 'react-router-dom'\n\nimport './styles.css';\nimport { getMovieDetailData } from './actions';\n\nclass MovieProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.getArrayInfo = this.getArrayInfo.bind(this);\n    this.convertMinToHours = this.convertMinToHours.bind(this);\n    this.formatDate = this.formatDate.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getMovieDetailData(this.props.movieID);\n  }\n\n  getArrayInfo(genres) {\n    return genres && genres.map((genre, i) => {\n      if (i + 1 === genres.length) {\n        return genre.name;\n      }\n\n      return `${genre.name}, `;\n    });\n  }\n\n  convertMinToHours(num) {\n    const hours = Math.floor(num / 60);\n    const minutes = num % 60;\n    return `${hours}h ${minutes}mins`;\n  }\n\n  formatDate(date) {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const day = date.getDate();\n    const monthIndex = date.getMonth();\n    const year = date.getFullYear();\n    return `${day} ${monthNames[monthIndex]} ${year}`;\n  }\n\n  render() {\n    console.log('data: ', this.props.movieDetailData);\n    const original_title = this.props.movieDetailData.title !== this.props.movieDetailData.original_title ? `(Orginal Title: ${this.props.movieDetailData.original_title})` : '';\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.props.movieDetailStatus === 'Done' ? React.createElement(\"div\", {\n      className: \"mpContainerWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movieDetailImg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.props.movieDetailData.poster_path && React.createElement(\"img\", {\n      src: `http://image.tmdb.org/t/p/w342/${this.props.movieDetailData.poster_path}`,\n      alt: `${this.props.movieDetailData.title} Movie`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"movieInfoWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movieInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"movieTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.props.movieDetailData.title, \" \", original_title), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.props.movieDetailData.status, \" | \", this.convertMinToHours(this.props.movieDetailData.runtime), \" | \", this.formatDate(this.props.movieDetailData.release_date), \" | \", this.props.movieDetailData.vote_average, \"/10\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.getArrayInfo(this.props.movieDetailData.genres), \" \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.props.movieDetailData.tagline), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.props.movieDetailData.overview, \" More information at\", React.createElement(\"a\", {\n      href: this.props.movieDetailData.homepage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.props.movieDetailData.homepage))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Facts:\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Budget: \"), \" \", this.props.movieDetailData.budget), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Revenue: \"), \" \", this.props.movieDetailData.revenue), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Production Companies: \"), \" \", this.getArrayInfo(this.props.movieDetailData.production_companies))))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"LOADING...\"));\n  }\n\n}\n\nMovieProfile.propTypes = {\n  getMovieDetailData: PropTypes.func.isRequired\n};\nMovieProfile.defaultProps = {};\n\nfunction mapStateToProps(state) {\n  return {\n    movieDetailData: state.MovieProfile.movieDetailData,\n    movieDetailStatus: state.MovieProfile.movieDetailStatus\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getMovieDetailData\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieProfile);","map":{"version":3,"sources":["/Users/ahaidar/Desktop/lattice/react-boilerplate/client/src/container/MovieProfile/index.js"],"names":["React","connect","bindActionCreators","PropTypes","getMovieDetailData","MovieProfile","Component","constructor","props","state","getArrayInfo","bind","convertMinToHours","formatDate","componentDidMount","movieID","genres","map","genre","i","length","name","num","hours","Math","floor","minutes","date","monthNames","day","getDate","monthIndex","getMonth","year","getFullYear","render","console","log","movieDetailData","original_title","title","movieDetailStatus","poster_path","status","runtime","release_date","vote_average","tagline","overview","homepage","budget","revenue","production_companies","propTypes","func","isRequired","defaultProps","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n// import { Link } from 'react-router-dom'\n\nimport './styles.css';\nimport { getMovieDetailData } from './actions';\n\n\nclass MovieProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n    this.getArrayInfo = this.getArrayInfo.bind(this);\n    this.convertMinToHours = this.convertMinToHours.bind(this);\n    this.formatDate = this.formatDate.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getMovieDetailData(this.props.movieID);\n  }\n\n  getArrayInfo(genres) {\n    return genres && genres.map((genre, i) => {\n      if((i+1) === genres.length) {\n        return genre.name;\n      }\n\n      return `${genre.name}, `;\n    });\n  }\n\n  convertMinToHours(num) {\n    const hours = Math.floor(num / 60);\n    const minutes = num % 60;\n    return `${hours}h ${minutes}mins`;\n  }\n\n  formatDate(date) {\n    const monthNames = [\n      \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n      \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    const day = date.getDate();\n    const monthIndex = date.getMonth();\n    const year = date.getFullYear();\n\n    return `${day} ${monthNames[monthIndex]} ${year}`;\n}\n\n  render() {\n    console.log('data: ', this.props.movieDetailData)\n    const original_title = this.props.movieDetailData.title !== this.props.movieDetailData.original_title ? `(Orginal Title: ${this.props.movieDetailData.original_title})` : '';\n    return(\n      <div>\n        {this.props.movieDetailStatus === 'Done' ?\n          <div className=\"mpContainerWrapper\">\n            <div className=\"movieDetailImg\">\n              {this.props.movieDetailData.poster_path && <img src={`http://image.tmdb.org/t/p/w342/${this.props.movieDetailData.poster_path}`} alt={`${this.props.movieDetailData.title} Movie`}/>}\n            </div>\n            <div className=\"movieInfoWrapper\">\n              <div className=\"movieInfo\">\n                <h1 className=\"movieTitle\">{this.props.movieDetailData.title} {original_title}</h1>\n                <h3>{this.props.movieDetailData.status} | {this.convertMinToHours(this.props.movieDetailData.runtime)} | {this.formatDate(this.props.movieDetailData.release_date)} | {this.props.movieDetailData.vote_average}/10</h3>\n                <h4>{this.getArrayInfo(this.props.movieDetailData.genres)} </h4>\n              </div>\n              <div>\n                <p>{this.props.movieDetailData.tagline}</p>\n                <p>{this.props.movieDetailData.overview} More information at\n                  <a href={this.props.movieDetailData.homepage}>{this.props.movieDetailData.homepage}</a>\n                </p>\n              </div>\n              <div>\n                <h3><u>Facts:</u></h3>\n                <p><b>Budget: </b> {this.props.movieDetailData.budget}</p>\n                <p><b>Revenue: </b> {this.props.movieDetailData.revenue}</p>\n                <p><b>Production Companies: </b> {this.getArrayInfo(this.props.movieDetailData.production_companies)}</p>\n              </div>\n            </div>\n          </div>\n        :\n          <div>LOADING...</div>\n        }\n      </div>\n    );\n  }\n}\n\nMovieProfile.propTypes = {\n  getMovieDetailData: PropTypes.func.isRequired,\n};\n\nMovieProfile.defaultProps = {\n\n};\n\nfunction mapStateToProps(state) {\n  return {\n    movieDetailData: state.MovieProfile.movieDetailData,\n    movieDetailStatus: state.MovieProfile.movieDetailStatus\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ getMovieDetailData }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieProfile);\n"]},"metadata":{},"sourceType":"module"}