{"ast":null,"code":"var _jsxFileName = \"/Users/ahaidar/Desktop/lattice/react-boilerplate/client/src/container/MovieProfile/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types'; // import { Link } from 'react-router-dom'\n\nimport './styles.css';\nimport { getMovieDetailData } from './actions';\n\nclass MovieProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.getGenreNames = this.getGenreNames.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getMovieDetailData(this.props.movieID);\n  }\n\n  getGenreNames(genres) {\n    return genres && genres.map((genre, i) => {\n      if (i + 1 === genres.length) {\n        return genre.name;\n      }\n\n      return `${genre.name}, `;\n    });\n  }\n\n  render() {\n    console.log('dets: ', this.props.movieDetailData);\n    return React.createElement(\"div\", {\n      className: \"mpContainerWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.props.movieDetailData.title);\n  }\n\n}\n\nMovieProfile.propTypes = {\n  getMovieDetailData: PropTypes.func.isRequired\n};\nMovieProfile.defaultProps = {};\n\nfunction mapStateToProps(state) {\n  return {\n    movieDetailData: state.MovieProfile.movieDetailData\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getMovieDetailData\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieProfile);","map":{"version":3,"sources":["/Users/ahaidar/Desktop/lattice/react-boilerplate/client/src/container/MovieProfile/index.js"],"names":["React","connect","bindActionCreators","PropTypes","getMovieDetailData","MovieProfile","Component","constructor","props","state","getGenreNames","bind","componentDidMount","movieID","genres","map","genre","i","length","name","render","console","log","movieDetailData","title","propTypes","func","isRequired","defaultProps","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AAEA,OAAO,cAAP;AACA,SAASC,kBAAT,QAAmC,WAAnC;;AAGA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAGA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,KAAL,CAAWJ,kBAAX,CAA8B,KAAKI,KAAL,CAAWK,OAAzC;AACD;;AAEDH,EAAAA,aAAa,CAACI,MAAD,EAAS;AACpB,WAAOA,MAAM,IAAIA,MAAM,CAACC,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,KAAc;AACxC,UAAIA,CAAC,GAAC,CAAH,KAAUH,MAAM,CAACI,MAApB,EAA4B;AAC1B,eAAOF,KAAK,CAACG,IAAb;AACD;;AAED,aAAQ,GAAEH,KAAK,CAACG,IAAK,IAArB;AACD,KANgB,CAAjB;AAOD;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKd,KAAL,CAAWe,eAAjC;AACA,WACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKf,KAAL,CAAWe,eAAX,CAA2BC,KAD9B,CADF;AAiBD;;AA1CwC;;AA6C3CnB,YAAY,CAACoB,SAAb,GAAyB;AACvBrB,EAAAA,kBAAkB,EAAED,SAAS,CAACuB,IAAV,CAAeC;AADZ,CAAzB;AAIAtB,YAAY,CAACuB,YAAb,GAA4B,EAA5B;;AAIA,SAASC,eAAT,CAAyBpB,KAAzB,EAAgC;AAC9B,SAAO;AACLc,IAAAA,eAAe,EAAEd,KAAK,CAACJ,YAAN,CAAmBkB;AAD/B,GAAP;AAGD;;AAED,SAASO,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO7B,kBAAkB,CAAC;AAAEE,IAAAA;AAAF,GAAD,EAAyB2B,QAAzB,CAAzB;AACD;;AAED,eAAe9B,OAAO,CAAC4B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CzB,YAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n// import { Link } from 'react-router-dom'\n\nimport './styles.css';\nimport { getMovieDetailData } from './actions';\n\n\nclass MovieProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n    this.getGenreNames = this.getGenreNames.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getMovieDetailData(this.props.movieID);\n  }\n\n  getGenreNames(genres) {\n    return genres && genres.map((genre, i) => {\n      if((i+1) === genres.length) {\n        return genre.name;\n      }\n\n      return `${genre.name}, `;\n    });\n  }\n\n  render() {\n    console.log('dets: ', this.props.movieDetailData)\n    return(\n      <div className=\"mpContainerWrapper\">\n        {this.props.movieDetailData.title}\n        {/*<div className=\"movieDetailImg\">\n          <img src={`http://image.tmdb.org/t/p/w342/${this.props.movieDetailData.poster_path}`} alt={`${this.props.movieDetailData.title} Movie`}/>\n        </div>\n        <div className=\"movieInfoWrapper\">\n          <div className=\"movieInfo\">\n            <h1 className=\"movieTitle\">{this.props.movieDetailData.title}</h1>\n            <h3>{this.getGenreNames(this.props.movieDetailData.genres)} | {this.props.movieDetailData.release_date}</h3>\n          </div>\n          <div>\n            <p>{this.props.movieDetailData.overview}</p>\n          </div>\n        </div>*/}\n      </div>\n    );\n  }\n}\n\nMovieProfile.propTypes = {\n  getMovieDetailData: PropTypes.func.isRequired,\n};\n\nMovieProfile.defaultProps = {\n\n};\n\nfunction mapStateToProps(state) {\n  return {\n    movieDetailData: state.MovieProfile.movieDetailData\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ getMovieDetailData }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieProfile);\n"]},"metadata":{},"sourceType":"module"}