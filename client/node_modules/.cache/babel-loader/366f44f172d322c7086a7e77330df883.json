{"ast":null,"code":"import _objectSpread from \"/Users/ahaidar/Desktop/lattice/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { ON_FETCH_MOVIE_START, ON_FETCH_MOVIE_SUCCESS, ON_FETCH_MOVIE_FAILED, ON_FETCH_MOVIE_DONE } from './constants'; // Intial Redux State\n\nconst initialState = {\n  movieData: [],\n  movieStatus: 'No Results'\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case ON_FETCH_MOVIE_SUCCESS:\n      return _objectSpread({}, state, {\n        movieData: action.payload\n      });\n\n    case ON_FETCH_MOVIE_START:\n      return _objectSpread({}, state, {\n        movieStatus: 'Loading'\n      });\n\n    case ON_FETCH_MOVIE_FAILED:\n      return _objectSpread({}, state, {\n        movieStatus: 'Failed'\n      });\n\n    case ON_FETCH_MOVIE_DONE:\n      return _objectSpread({}, state, {\n        movieStatus: 'Done'\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/ahaidar/Desktop/lattice/react-boilerplate/src/container/HomePage/reducer.js"],"names":["ON_FETCH_MOVIE_START","ON_FETCH_MOVIE_SUCCESS","ON_FETCH_MOVIE_FAILED","ON_FETCH_MOVIE_DONE","initialState","movieData","movieStatus","state","action","type","payload"],"mappings":";AAAA,SACEA,oBADF,EAEEC,sBAFF,EAGEC,qBAHF,EAIEC,mBAJF,QAKO,aALP,C,CAOA;;AACA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,SAAS,EAAE,EADS;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;AAKA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,sBAAL;AACE,+BAAYM,KAAZ;AAAmBF,QAAAA,SAAS,EAAEG,MAAM,CAACE;AAArC;;AAEF,SAAKV,oBAAL;AACE,+BAAYO,KAAZ;AAAmBD,QAAAA,WAAW,EAAE;AAAhC;;AAEF,SAAKJ,qBAAL;AACE,+BAAYK,KAAZ;AAAmBD,QAAAA,WAAW,EAAE;AAAhC;;AAEF,SAAKH,mBAAL;AACE,+BAAYI,KAAZ;AAAmBD,QAAAA,WAAW,EAAE;AAAhC;;AAEF;AACE,aAAOC,KAAP;AAdJ;AAgBD,CAjBD","sourcesContent":["import {\n  ON_FETCH_MOVIE_START,\n  ON_FETCH_MOVIE_SUCCESS,\n  ON_FETCH_MOVIE_FAILED,\n  ON_FETCH_MOVIE_DONE\n} from './constants';\n\n// Intial Redux State\nconst initialState = {\n\tmovieData: [],\n  movieStatus: 'No Results',\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ON_FETCH_MOVIE_SUCCESS:\n      return { ...state, movieData: action.payload };\n\n    case ON_FETCH_MOVIE_START:\n      return { ...state, movieStatus: 'Loading' };\n\n    case ON_FETCH_MOVIE_FAILED:\n      return { ...state, movieStatus: 'Failed' };\n\n    case ON_FETCH_MOVIE_DONE:\n      return { ...state, movieStatus: 'Done' };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}