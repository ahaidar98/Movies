{"ast":null,"code":"var _jsxFileName = \"/Users/ahaidar/Desktop/lattice/react-boilerplate/client/src/container/MovieProfile/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types'; // import { Link } from 'react-router-dom'\n\nimport './styles.css';\nimport { getMovieDetailData } from './actions';\n\nclass MovieProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.getArrayInfo = this.getArrayInfo.bind(this);\n    this.convertMinToHours = this.convertMinToHours.bind(this);\n    this.formatDate = this.formatDate.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getMovieDetailData(this.props.movieID);\n  }\n\n  getArrayInfo(genres) {\n    return genres && genres.map((genre, i) => {\n      if (i + 1 === genres.length) {\n        return genre.name;\n      }\n\n      return `${genre.name}, `;\n    });\n  }\n\n  convertMinToHours(num) {\n    const hours = Math.floor(num / 60);\n    const minutes = num % 60;\n    return `${hours}h ${minutes}mins`;\n  }\n\n  formatDate(date) {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const parts = date.split('-');\n    return `${monthNames[parts[1] - 1]} ${parts[2]} ${parts[0]}`;\n  }\n\n  movieFacts() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Facts:\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Budget: \"), \" $\", this.props.movieDetailData.budget.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Revenue: \"), \" $\", this.props.movieDetailData.revenue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Production Companies: \"), \" \", this.getArrayInfo(this.props.movieDetailData.production_companies)));\n  }\n\n  render() {\n    const original_title = this.props.movieDetailData.title !== this.props.movieDetailData.original_title ? `(Orginal Title: ${this.props.movieDetailData.original_title})` : '';\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.props.movieDetailStatus === 'Done' ? React.createElement(\"div\", {\n      className: \"mpContainerWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movieDetailImg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.props.movieDetailData.poster_path && React.createElement(\"img\", {\n      src: `http://image.tmdb.org/t/p/w342/${this.props.movieDetailData.poster_path}`,\n      alt: `${this.props.movieDetailData.title} Movie`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"movieInfoWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movieInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"movieTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.props.movieDetailData.title, \" \", original_title), React.createElement(\"h4\", {\n      className: \"movieStatusHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movieStatusInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.props.movieDetailData.status, \" | \", this.convertMinToHours(this.props.movieDetailData.runtime), \" | \", this.formatDate(this.props.movieDetailData.release_date)), React.createElement(\"div\", {\n      className: \"ratingWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.props.movieDetailData.vote_average, \"/10\")), React.createElement(\"h4\", {\n      className: \"genreHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.getArrayInfo(this.props.movieDetailData.genres), \" \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.props.movieDetailData.tagline), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.props.movieDetailData.overview, \" More information at\", React.createElement(\"a\", {\n      className: \"movieHomeLink\",\n      href: this.props.movieDetailData.homepage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.props.movieDetailData.homepage), \".\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.movieFacts()))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"LOADING...\"));\n  }\n\n}\n\nMovieProfile.propTypes = {\n  getMovieDetailData: PropTypes.func.isRequired\n};\nMovieProfile.defaultProps = {};\n\nfunction mapStateToProps(state) {\n  return {\n    movieDetailData: state.MovieProfile.movieDetailData,\n    movieDetailStatus: state.MovieProfile.movieDetailStatus\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getMovieDetailData\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieProfile);","map":{"version":3,"sources":["/Users/ahaidar/Desktop/lattice/react-boilerplate/client/src/container/MovieProfile/index.js"],"names":["React","connect","bindActionCreators","PropTypes","getMovieDetailData","MovieProfile","Component","constructor","props","state","getArrayInfo","bind","convertMinToHours","formatDate","componentDidMount","movieID","genres","map","genre","i","length","name","num","hours","Math","floor","minutes","date","monthNames","parts","split","movieFacts","movieDetailData","budget","toString","replace","revenue","production_companies","render","original_title","title","movieDetailStatus","poster_path","status","runtime","release_date","vote_average","tagline","overview","homepage","propTypes","func","isRequired","defaultProps","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n// import { Link } from 'react-router-dom'\n\nimport './styles.css';\nimport { getMovieDetailData } from './actions';\n\n\nclass MovieProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n    this.getArrayInfo = this.getArrayInfo.bind(this);\n    this.convertMinToHours = this.convertMinToHours.bind(this);\n    this.formatDate = this.formatDate.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getMovieDetailData(this.props.movieID);\n  }\n\n  getArrayInfo(genres) {\n    return genres && genres.map((genre, i) => {\n      if((i+1) === genres.length) {\n        return genre.name;\n      }\n\n      return `${genre.name}, `;\n    });\n  }\n\n  convertMinToHours(num) {\n    const hours = Math.floor(num / 60);\n    const minutes = num % 60;\n    return `${hours}h ${minutes}mins`;\n  }\n\n  formatDate(date) {\n    const monthNames = [\n      \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n      \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    const parts = date.split('-');\n\n    return `${monthNames[parts[1] -1]} ${parts[2]} ${parts[0]}`;\n  }\n\n  movieFacts() {\n    return (\n      <div>\n        <h3><u>Facts:</u></h3>\n        <p><b>Budget: </b> ${this.props.movieDetailData.budget.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\n        <p><b>Revenue: </b> ${this.props.movieDetailData.revenue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\n        <p><b>Production Companies: </b> {this.getArrayInfo(this.props.movieDetailData.production_companies)}</p>\n      </div>\n    );\n  }\n\n  render() {\n    const original_title = this.props.movieDetailData.title !== this.props.movieDetailData.original_title ? `(Orginal Title: ${this.props.movieDetailData.original_title})` : '';\n    return(\n      <div>\n        {this.props.movieDetailStatus === 'Done' ?\n          <div className=\"mpContainerWrapper\">\n            <div className=\"movieDetailImg\">\n              {this.props.movieDetailData.poster_path && <img src={`http://image.tmdb.org/t/p/w342/${this.props.movieDetailData.poster_path}`} alt={`${this.props.movieDetailData.title} Movie`}/>}\n            </div>\n            <div className=\"movieInfoWrapper\">\n              <div className=\"movieInfo\">\n                <h1 className=\"movieTitle\">{this.props.movieDetailData.title} {original_title}</h1>\n                <h4 className=\"movieStatusHeader\">\n                  <div className=\"movieStatusInfo\">{this.props.movieDetailData.status} | {this.convertMinToHours(this.props.movieDetailData.runtime)} | {this.formatDate(this.props.movieDetailData.release_date)}</div>\n                  <div className=\"ratingWrapper\">{this.props.movieDetailData.vote_average}/10</div>\n                </h4>\n                <h4 className=\"genreHeader\">{this.getArrayInfo(this.props.movieDetailData.genres)} </h4>\n              </div>\n              <div>\n                <p>{this.props.movieDetailData.tagline}</p>\n                <p>{this.props.movieDetailData.overview} More information at\n                  <a className=\"movieHomeLink\" href={this.props.movieDetailData.homepage}>{this.props.movieDetailData.homepage}</a>.\n                </p>\n              </div>\n              <div>\n                {this.movieFacts()}\n              </div>\n            </div>\n          </div>\n        :\n          <div>LOADING...</div>\n        }\n      </div>\n    );\n  }\n}\n\nMovieProfile.propTypes = {\n  getMovieDetailData: PropTypes.func.isRequired,\n};\n\nMovieProfile.defaultProps = {\n\n};\n\nfunction mapStateToProps(state) {\n  return {\n    movieDetailData: state.MovieProfile.movieDetailData,\n    movieDetailStatus: state.MovieProfile.movieDetailStatus\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ getMovieDetailData }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieProfile);\n"]},"metadata":{},"sourceType":"module"}